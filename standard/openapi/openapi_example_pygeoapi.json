{
    "components": {
        "parameters": {
            "f": {
                "description": "The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is GeoJSON.",
                "explode": false,
                "in": "query",
                "name": "f",
                "required": false,
                "schema": {
                    "default": "json",
                    "enum": [
                        "json",
                        "html",
                        "jsonld"
                    ],
                    "type": "string"
                },
                "style": "form"
            },
            "sortby": {
                "description": "The optional sortby parameter indicates the sort property and order on which the server shall present results in the response document using the convention `sortby=PROPERTY:X`, where `PROPERTY` is the sort property and `X` is the sort order (`A` is ascending, `D` is descending). Sorting by multiple properties is supported by providing a comma-separated list.",
                "explode": false,
                "in": "query",
                "name": "sortby",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "startindex": {
                "description": "The optional startindex parameter indicates the index within the result set from which the server shall begin presenting results in the response document.  The first element has an index of 0 (default).",
                "explode": false,
                "in": "query",
                "name": "startindex",
                "required": false,
                "schema": {
                    "default": 0,
                    "minimum": 0,
                    "type": "integer"
                },
                "style": "form"
            }
        },
        "responses": {
            "200": {
                "description": "successful operation"
            },
            "default": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml"
                        }
                    }
                },
                "description": "Unexpected error"
            }
        }
    },
    "info": {
        "contact": {
            "email": "you@example.org",
            "name": "Organization Name",
            "url": "https://pygeoapi.io"
        },
        "description": "pygeoapi provides an API to geospatial data",
        "license": {
            "name": "CC-BY 4.0 license",
            "url": "https://creativecommons.org/licenses/by/4.0/"
        },
        "termsOfService": null,
        "title": "pygeoapi default instance",
        "version": "3.0.2",
        "x-keywords": [
            "geospatial",
            "data",
            "api"
        ]
    },
    "openapi": "3.0.2",
    "paths": {
        "/": {
            "get": {
                "description": "Landing page",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "500": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "Landing page",
                "tags": [
                    "server"
                ]
            }
        },
        "/collections": {
            "get": {
                "description": "Feature Collections",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "500": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "Feature Collections",
                "tags": [
                    "server"
                ]
            }
        },
        "/collections/cmip5": {
            "get": {
                "description": "CMIP5 sample",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "404": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "Get collection metadata",
                "tags": [
                    "cmip5"
                ]
            }
        },
        "/collections/cmip5/coverage": {
            "get": {
                "description": "CMIP5 sample",
                "responses": {
                    "200": {
                        "$ref": "https://raw.githubusercontent.com/opengeospatial/ogcapi-coverages/master/standard/openapi/openapi.yaml#/components/schemas/coverageOffering"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "404": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "Get CMIP5 sample coverage metadata",
                "tags": [
                    "cmip5"
                ]
            }
        },
        "/collections/cmip5/coverage/all": {
            "get": {
                "description": "CMIP5 sample",
                "parameters": [
                    {
                        "$ref": "https://raw.githubusercontent.com/opengeospatial/ogcapi-coverages/master/standard/openapi/openapi.yaml#components/parameters/range-subset"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "https://raw.githubusercontent.com/opengeospatial/ogcapi-coverages/master/standard/openapi/schemas/coverage_metadata.yaml#metadata/properties"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "404": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "Get CMIP5 sample coverage data",
                "tags": [
                    "cmip5"
                ]
            }
        },
        "/collections/cmip5/coverage/metadata": {
            "get": {
                "description": "CMIP5 sample",
                "responses": {
                    "200": {
                        "$ref": "https://raw.githubusercontent.com/opengeospatial/ogcapi-coverages/master/standard/openapi/schemas/coverage_metadata.yaml#metadata/properties"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "404": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "Get CMIP5 sample coverage metadata",
                "tags": [
                    "cmip5"
                ]
            }
        },
        "/conformance": {
            "get": {
                "description": "API conformance definition",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "500": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "API conformance definition",
                "tags": [
                    "server"
                ]
            }
        },
        "/openapi": {
            "get": {
                "description": "This document",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "summary": "This document",
                "tags": [
                    "server"
                ]
            }
        },
    },
    "servers": [
        {
            "description": "pygeoapi provides an API to geospatial data",
            "url": "https://demo.pygeoapi.io/"
        }
    ],
    "tags": [
        {
            "description": "pygeoapi provides an API to geospatial data",
            "externalDocs": {
                "description": "information",
                "url": "http://example.org"
            },
            "name": "server"
        },
        {
            "description": "CMIP5 sample",
            "name": "cmip5"
        }
    ]
}
